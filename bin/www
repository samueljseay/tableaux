#!/usr/bin/env node
var debug = require('debug')('tableaux'),
    app = require('../app'),
    port = process.env.PORT || 3000;

app.db.sync({ force: process.env.NODE_ENV === 'development' }).then(function() {
  //load seeds
  var seeds = require('../lib/seed');

  app.set('port', port);

  var server = app.listen(app.get('port'), function() {
    console.log('app started on port: ' + app.get('port'));
  });

  server.on('error', onError);
});

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}
